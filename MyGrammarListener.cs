//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MyGrammar.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MyGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IMyGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedExpression([NotNull] MyGrammarParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedExpression([NotNull] MyGrammarParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AdditiveExpression</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] MyGrammarParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AdditiveExpression</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] MyGrammarParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MminFunction</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMminFunction([NotNull] MyGrammarParser.MminFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MminFunction</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMminFunction([NotNull] MyGrammarParser.MminFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] MyGrammarParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] MyGrammarParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] MyGrammarParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] MyGrammarParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Cell</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCell([NotNull] MyGrammarParser.CellContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Cell</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCell([NotNull] MyGrammarParser.CellContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MultiplicativeExpression</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] MyGrammarParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiplicativeExpression</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] MyGrammarParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MmaxFunction</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMmaxFunction([NotNull] MyGrammarParser.MmaxFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MmaxFunction</c>
	/// labeled alternative in <see cref="MyGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMmaxFunction([NotNull] MyGrammarParser.MmaxFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyGrammarParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprList([NotNull] MyGrammarParser.ExprListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyGrammarParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprList([NotNull] MyGrammarParser.ExprListContext context);
}
